CREATE ROLE postgres;
GRANT postgres TO session_user;

CREATE TABLE IF NOT EXISTS public.admin_user
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    email character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    password_digest character varying(255) COLLATE pg_catalog."default",
    username character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT admin_user_pkey PRIMARY KEY (id),
    CONSTRAINT uk_lvod9bfm438ex1071ku1glb70 UNIQUE (username)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.admin_user
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.category
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    color character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT category_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.category
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.person
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    email character varying(255) COLLATE pg_catalog."default",
    gender integer,
    name character varying(255) COLLATE pg_catalog."default",
    retired boolean NOT NULL,
    CONSTRAINT person_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.person
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.season
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default",
    start_year integer NOT NULL,
    CONSTRAINT season_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.season
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.event
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    date date,
    title character varying(255) COLLATE pg_catalog."default",
    venue character varying(255) COLLATE pg_catalog."default",
    category_id bigint,
    season_id bigint,
    is_team_based boolean NOT NULL,
    CONSTRAINT event_pkey PRIMARY KEY (id),
    CONSTRAINT fk751x8cp2x1h1fay38u2p5gpkr FOREIGN KEY (category_id)
        REFERENCES public.category (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk91w9bek57oolwabafbo4lr6bs FOREIGN KEY (season_id)
        REFERENCES public.season (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.event
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.participant
(
    rank integer NOT NULL,
    score character varying(255) COLLATE pg_catalog."default",
    event_id bigint NOT NULL,
    person_id bigint NOT NULL,
    CONSTRAINT participant_pkey PRIMARY KEY (event_id, person_id),
    CONSTRAINT fklk8vg0h8jc2mw5c5hujb2h4up FOREIGN KEY (person_id)
        REFERENCES public.person (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkojeqkvv72xcx0ytdqkik7objq FOREIGN KEY (event_id)
        REFERENCES public.event (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.participant
    OWNER to postgres;

-- The password is; password
-- This should be changed immediately after first deploy
INSERT INTO public.admin_user(name, password_digest, username) VALUES ( 'Mangekamp Admin', '{bcrypt}$2a$10$GRLdNijSQMUvl/au9ofL.eDwmoohzzS7.rmNSJZ.0FxO/BTk76klW', 'admin');

INSERT INTO public.category(color, name) VALUES ('#56A3A6', 'Kondisjon');
INSERT INTO public.category(color, name) VALUES ('#6B0504', 'Ball√∏velser');
INSERT INTO public.category(color, name) VALUES ('#A3320B', 'Teknikk');